<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE X3D PUBLIC "ISO//Web3D//DTD X3D 3.3//EN" "http://www.web3d.org/specifications/x3d-3.3.dtd">
<X3D profile='Full' version='3.3' xmlns:xsd='http://www.w3.org/2001/XMLSchema-instance' xsd:noNamespaceSchemaLocation='http://www.web3d.org/specifications/x3d-3.3.xsd'>
  <head>
    <meta name='comment' content='World of Titania'/>
    <meta name='created' content='Sun, 17 Dec 2017 11:02:55 GMT'/>
    <meta name='creator' content='Holger Seelig'/>
    <meta name='generator' content='Titania V4.0.3, http://titania.create3000.de'/>
    <meta name='identifier' content='file:///home/holger/Projekte/Library/Prototypes/Engines/Noise.x3d'/>
    <meta name='modified' content='Sun, 17 Dec 2017 12:08:34 GMT'/>
  </head>
  <Scene>
    <ProtoDeclare name='Noise'>
      <ProtoInterface>
        <field accessType='inputOutput' type='SFBool' name='enabled'/>
        <field accessType='inputOutput' type='SFFloat' name='frequency' value='1'/>
        <field accessType='inputOutput' type='SFFloat' name='amplitude' value='1'/>
        <field accessType='inputOutput' type='SFFloat' name='phase' value='1'/>
        <field accessType='outputOnly' type='SFFloat' name='value_changed'/>
      </ProtoInterface>
      <ProtoBody>
        <Script DEF='NoiseScript'
            directOutput='true'>
          <field accessType='inputOnly' type='SFTime' name='set_time'/>
          <field accessType='inputOutput' type='SFFloat' name='frequency'/>
          <field accessType='inputOutput' type='SFFloat' name='amplitude'/>
          <field accessType='inputOutput' type='SFFloat' name='phase'/>
          <field accessType='outputOnly' type='SFFloat' name='value_changed'/>
          <field accessType='initializeOnly' type='SFFloat' name='CR00' value='-0.5'/>
          <field accessType='initializeOnly' type='SFFloat' name='CR01' value='1.5'/>
          <field accessType='initializeOnly' type='SFFloat' name='CR02' value='-1.5'/>
          <field accessType='initializeOnly' type='SFFloat' name='CR03' value='0.5'/>
          <field accessType='initializeOnly' type='SFFloat' name='CR10' value='1'/>
          <field accessType='initializeOnly' type='SFFloat' name='CR11' value='-2.5'/>
          <field accessType='initializeOnly' type='SFFloat' name='CR12' value='2'/>
          <field accessType='initializeOnly' type='SFFloat' name='CR13' value='-0.5'/>
          <field accessType='initializeOnly' type='SFFloat' name='CR20' value='-0.5'/>
          <field accessType='initializeOnly' type='SFFloat' name='CR21'/>
          <field accessType='initializeOnly' type='SFFloat' name='CR22' value='0.5'/>
          <field accessType='initializeOnly' type='SFFloat' name='CR23'/>
          <field accessType='initializeOnly' type='SFFloat' name='CR30'/>
          <field accessType='initializeOnly' type='SFFloat' name='CR31' value='1'/>
          <field accessType='initializeOnly' type='SFFloat' name='CR32'/>
          <field accessType='initializeOnly' type='SFFloat' name='CR33'/>
          <field accessType='initializeOnly' type='SFInt32' name='TABSIZE' value='256'/>
          <field accessType='initializeOnly' type='SFInt32' name='TABMASK' value='255'/>
          <field accessType='initializeOnly' type='MFFloat' name='VALUTAB' value='0.0888609, 0.671746, -0.238632, 0.678037, -0.373835, -0.514796, 0.205414, -0.350356, -0.59628, 0.747969, 0.332936, 0.820281, 0.167436, 0.596257, 0.217673, -0.0116954, -0.189295, 0.739336, -0.686621, -0.209204, 0.670222, -0.0578778, 0.691074, 0.102425, -0.356207, 0.128949, 0.709713, 0.488943, -0.137727, 0.199515, -0.355624, 0.465471, 0.153581, -0.23675, 0.895705, 0.768754, 0.730139, 0.301072, 0.191413, -0.500962, 0.411945, 0.753733, -0.334702, 0.8212, 0.265798, 0.213711, 0.861313, 0.936256, 0.797134, 0.262805, -0.440154, 0.243348, 0.774205, -0.449642, -0.139523, 0.00880692, -0.604745, -0.552757, -0.819918, 0.442851, -0.172312, 0.0384904, -0.262726, 0.855993, -0.845937, 0.33268, -0.306231, -0.473808, -0.546862, -0.631073, 0.410383, -0.945723, -0.874973, -0.107437, -0.750032, 0.319146, 0.637912, -0.551691, 0.0217178, 0.665755, 0.629574, -0.89499, -0.489142, -0.33214, 0.740415, -0.421302, 0.574878, 0.70398, 0.68547, 0.261014, 0.0120439, 0.669035, 0.891268, 0.58774, 0.820054, -0.584415, 0.529279, -0.702575, -0.437697, 0.977598, -0.0289747, -0.56717, 0.346338, 0.276135, 0.570811, -0.571848, -0.606313, -0.159652, -0.74964, -0.697292, 0.342362, -0.901342, 0.615535, -0.152982, 0.272934, 0.0039746, -0.721335, -0.260067, -0.0137903, -0.846722, -0.309147, 0.77571, -0.714883, 0.145916, 0.107009, 0.807666, 0.925545, 0.696394, -0.687787, -0.369742, -0.499522, 0.976474, -0.56863, 0.824206, -0.191122, 0.807844, -0.475035, 0.579478, -0.764628, -0.339368, 0.742108, 0.688707, 0.328925, 0.934493, 0.557913, -0.731167, -0.881732, 0.708019, -0.934413, -0.678477, -0.261017, -0.961329, 0.42451, -0.0168827, 0.671737, 0.979442, -0.616091, 0.242615, 0.303273, 0.749919, 0.307606, 0.02144, -0.378621, -0.0415619, 0.318678, 0.811452, -0.357831, -0.581546, -0.936284, -0.442086, 0.6426, -0.06372, -0.835253, -0.848146, -0.566723, 0.468817, -0.317276, 0.761503, -0.243792, 0.258866, -0.140132, -0.714792, -0.570731, 0.952126, 0.0389754, -0.551531, 0.083745, -0.716059, 0.976205, 0.495491, -0.746553, 0.695368, -0.230318, 0.0408358, 0.17349, -0.802917, 0.319625, 0.44955, -0.0660672, 0.946187, 0.616589, 0.104332, -0.391907, 0.334887, 0.222718, -0.90394, 0.637461, -0.0884199, -0.933165, 0.239235, 0.104747, -0.836207, -0.882518, -0.133387, -0.436315, 0.0889625, -0.371056, 0.597558, -0.181134, -0.437009, 0.473606, 0.202362, -0.539057, -0.21198, 0.579883, 0.800018, 0.0621801, 0.559836, -0.311707, 0.929674, -0.275573, 0.741803, -0.480866, -0.47378, -0.853798, -0.833778, -0.986445, -0.491796, 0.537681, -0.794519, -0.4343, -0.448504, -0.438001, 0.464341, 0.106928, -0.325138, 0.0183754, -0.558781, 0.534007, -0.496157, 0.207199, 0.590268, -0.708473, -0.492928, 0.829287, -0.0124149'/>
          <field accessType='initializeOnly' type='MFInt32' name='PERM' value='225, 155, 210, 108, 175, 199, 221, 144, 203, 116, 70, 213, 69, 158, 33, 252, 5, 82, 173, 133, 222, 139, 174, 27, 9, 71, 90, 246, 75, 130, 91, 191, 169, 138, 2, 151, 194, 235, 81, 7, 25, 113, 228, 159, 205, 253, 134, 142, 248, 65, 224, 217, 22, 121, 229, 63, 89, 103, 96, 104, 156, 17, 201, 129, 36, 8, 165, 110, 237, 117, 231, 56, 132, 211, 152, 20, 181, 111, 239, 218, 170, 163, 51, 172, 157, 47, 80, 212, 176, 250, 87, 49, 99, 242, 136, 189, 162, 115, 44, 43, 124, 94, 150, 16, 141, 247, 32, 10, 198, 223, 255, 72, 53, 131, 84, 57, 220, 197, 58, 50, 208, 11, 241, 28, 3, 192, 62, 202, 18, 215, 153, 24, 76, 41, 15, 179, 39, 46, 55, 6, 128, 167, 23, 188, 106, 34, 187, 140, 164, 73, 112, 182, 244, 195, 227, 13, 35, 77, 196, 185, 26, 200, 226, 119, 31, 123, 168, 125, 249, 68, 183, 230, 177, 135, 160, 180, 12, 1, 243, 148, 102, 166, 38, 238, 251, 37, 240, 126, 64, 74, 161, 40, 184, 149, 171, 178, 101, 66, 29, 59, 146, 61, 254, 107, 42, 86, 154, 4, 236, 232, 120, 21, 233, 209, 45, 98, 193, 114, 78, 19, 206, 14, 118, 127, 48, 79, 147, 85, 30, 207, 219, 54, 88, 234, 190, 122, 95, 67, 143, 109, 137, 214, 145, 93, 92, 100, 245, 0, 216, 186, 60, 83, 105, 97, 204, 52'/>
          <field accessType='initializeOnly' type='SFNode' name='timer'>
            <TimeSensor DEF='Timer'
                loop='true'
                stopTime='1'>
              <IS>
                <connect nodeField='enabled' protoField='enabled'/>
              </IS>
            </TimeSensor>
          </field>
          <field accessType='initializeOnly' type='SFInt32' name='seed'/>
          <IS>
            <connect nodeField='frequency' protoField='frequency'/>
            <connect nodeField='amplitude' protoField='amplitude'/>
            <connect nodeField='phase' protoField='phase'/>
            <connect nodeField='value_changed' protoField='value_changed'/>
          </IS>
<![CDATA[ecmascript:

// PEACHEYnoise

var xknots = [ ];
var yknots = [ ];
var zknots = [ ];

function initialize ()
{
	for (i = 0; i < TABSIZE; i++)
		VALUTAB [i] = 1.0 - 2.0 * Math .random ();
}

function set_time (time)
{
	value_changed = amplitude * vnoise (time * frequency) + phase;
}

function vnoise (value)
{
	xknots .length = 0;
	yknots .length = 0;
	zknots .length = 0;

	var ix = Math .floor (value);
	var fx = value - ix;

	for (k = -1; k <= 2; k ++)
	{
		for (j = -1; j <= 2; j ++)
		{
			for (i = -1; i <= 2; i ++)
				xknots [i + 1] = vlattice (ix + i, ix + j, k);

			yknots [j + 1] = spline (fx, 4, xknots);
		}

		zknots [k + 1] = spline (fx, 4, yknots);
	}

	return spline (0, 4, zknots);
}

function spline (x, nknots, knot)
{
	var i      = 0;
	var nspans = nknots - 3;

	if (nspans >= 1)
	{
		/* Find the appropriate 4-point span of the spline. */
		var x    = clamp(x, 0, 1) * nspans;
		var span = Math.floor(x);
		
		if (span >= (nknots - 3))
			span = (nknots - 3);
		
		x -= span;
		i += span;

		/* Evaluate the span cubic at x using Horners rule. */
		var c3 = CR00 * knot [0 + i] + CR01 * knot [1 + i] + CR02 * knot [2 + i] + CR03 * knot [3 + i];
		var c2 = CR10 * knot [0 + i] + CR11 * knot [1 + i] + CR12 * knot [2 + i] + CR13 * knot [3 + i];
		var c1 = CR20 * knot [0 + i] + CR21 * knot [1 + i] + CR22 * knot [2 + i] + CR23 * knot [3 + i];
		var c0 = CR30 * knot [0 + i] + CR31 * knot [1 + i] + CR32 * knot [2 + i] + CR33 * knot [3 + i];

		return ((c3 * x + c2) * x + c1) * x + c0;
	}
}

function perm (x)
{
	return PERM [(x & TABMASK)];
}

function index (ix, iy, iz)
{
	return perm (ix + perm (iy + perm (iz)));
}

function vlattice (ix, iy, iz)
{
	return VALUTAB [index (ix, iy, iz)];
}

function clamp (x, a, b)
{
	return x <= a ? a : (x >= b ? b : x);
}
]]>
        </Script>
        <ROUTE fromNode='Timer' fromField='time' toNode='NoiseScript' toField='set_time'/>
      </ProtoBody>
    </ProtoDeclare>
  </Scene>
</X3D>
