<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE X3D PUBLIC "ISO//Web3D//DTD X3D 3.3//EN" "http://www.web3d.org/specifications/x3d-3.3.dtd">
<X3D profile='Full' version='3.3' xmlns:xsd='http://www.w3.org/2001/XMLSchema-instance' xsd:noNamespaceSchemaLocation='http://www.web3d.org/specifications/x3d-3.3.xsd'>
  <head>
    <meta name='comment' content='World of Titania'/>
  </head>
  <Scene>
    <ProtoDeclare name='Grid'>
      <ProtoInterface>
        <field accessType='inputOutput' type='SFVec3f' name='translation'/>
        <field accessType='inputOutput' type='SFRotation' name='rotation'/>
        <field accessType='inputOutput' type='SFVec3f' name='scale' value='1 1 1'/>
        <field accessType='inputOutput' type='MFInt32' name='dimension' value='10, 10, 10'/>
        <field accessType='inputOutput' type='MFInt32' name='majorLineEvery' value='5, 5, 5'/>
        <field accessType='inputOutput' type='MFInt32' name='majorLineOffset' value='0, 0, 0'/>
        <field accessType='inputOutput' type='SFVec3f' name='planeOffset'/>
        <field accessType='inputOutput' type='SFColor' name='planeColor' value='0.5 0.5 0.5'/>
        <field accessType='inputOutput' type='SFFloat' name='planeTransparency' value='0.61803'/>
        <field accessType='inputOutput' type='SFColor' name='lineColor' value='1 0.7 0.7'/>
        <field accessType='inputOutput' type='SFFloat' name='lineTransparency' value='0.8'/>
        <field accessType='inputOutput' type='SFColor' name='majorLineColor' value='1 0.7 0.7'/>
        <field accessType='inputOutput' type='SFFloat' name='majorLineTransparency' value='0.6'/>
        <field accessType='inputOutput' type='SFBool' name='numbers' value='true'/>
        <field accessType='inputOutput' type='SFVec3f' name='numberOffset'/>
        <field accessType='inputOutput' type='SFNode' name='numberAppearance'/>
        <field accessType='inputOutput' type='SFNode' name='numberFontStyle'/>
        <field accessType='initializeOnly' type='SFBool' name='solid' value='true'/>
      </ProtoInterface>
      <ProtoBody>
        <Transform>
          <IS>
            <connect nodeField='rotation' protoField='rotation'/>
          </IS>
          <Transform>
            <IS>
              <connect nodeField='translation' protoField='translation'/>
              <connect nodeField='scale' protoField='scale'/>
            </IS>
            <Transform>
              <IS>
                <connect nodeField='translation' protoField='planeOffset'/>
              </IS>
              <Transform DEF='Plane'
                  rotation='0 0.70710528118436 0.707108281185553 3.14159'
                  scale='10 10 1'>
                <Shape>
                  <Appearance>
                    <Material DEF='Material2'
                        diffuseColor='0 0 0'>
                      <IS>
                        <connect nodeField='emissiveColor' protoField='planeColor'/>
                        <connect nodeField='transparency' protoField='planeTransparency'/>
                      </IS>
                    </Material>
                  </Appearance>
                  <Rectangle2D
                      size='1 1'>
                    <IS>
                      <connect nodeField='solid' protoField='solid'/>
                    </IS>
                  </Rectangle2D>
                </Shape>
              </Transform>
            </Transform>
            <Shape DEF='MajorGrid'>
              <Appearance>
                <Material DEF='MajorMaterial'>
                  <IS>
                    <connect nodeField='emissiveColor' protoField='majorLineColor'/>
                    <connect nodeField='transparency' protoField='majorLineTransparency'/>
                  </IS>
                </Material>
              </Appearance>
              <IndexedLineSet DEF='MajorGrid_1'
                  coordIndex='0, 1, -1, 2, 3, -1, 4, 5, -1, 6, 7, -1, 8, 9, -1, 10, 11, -1'>
                <Coordinate
                    point='-5 0 -5.25, -5 0 5.25, 0 0 -5.25, 0 0 5.25, 5 0 -5.25, 5 0 5.25, -5.25 0 -5, 5.25 0 -5, -5.25 0 0, 5.25 0 0, -5.25 0 5, 5.25 0 5'/>
              </IndexedLineSet>
            </Shape>
            <Shape DEF='MinorGrid'>
              <Appearance>
                <Material DEF='MinorMaterial'>
                  <IS>
                    <connect nodeField='emissiveColor' protoField='lineColor'/>
                    <connect nodeField='transparency' protoField='lineTransparency'/>
                  </IS>
                </Material>
              </Appearance>
              <IndexedLineSet DEF='MinorGrid_1'
                  coordIndex='0, 1, -1, 2, 3, -1, 4, 5, -1, 6, 7, -1, 8, 9, -1, 10, 11, -1, 12, 13, -1, 14, 15, -1, 16, 17, -1, 18, 19, -1, 20, 21, -1, 22, 23, -1, 24, 25, -1, 26, 27, -1, 28, 29, -1, 30, 31, -1'>
                <Coordinate
                    point='-4 0 -5, -4 0 5, -3 0 -5, -3 0 5, -2 0 -5, -2 0 5, -1 0 -5, -1 0 5, 1 0 -5, 1 0 5, 2 0 -5, 2 0 5, 3 0 -5, 3 0 5, 4 0 -5, 4 0 5, -5 0 -4, 5 0 -4, -5 0 -3, 5 0 -3, -5 0 -2, 5 0 -2, -5 0 -1, 5 0 -1, -5 0 1, 5 0 1, -5 0 2, 5 0 2, -5 0 3, 5 0 3, -5 0 4, 5 0 4'/>
              </IndexedLineSet>
            </Shape>
            <Shape DEF='MajorPoints'>
              <Appearance>
                <LineProperties
                    linewidthScaleFactor='6'/>
                <Material USE='MajorMaterial'/>
              </Appearance>
              <PointSet DEF='MajorPoints_1'>
                <Coordinate
                    point='0 -5 0, 0 0 0, 0 5 0'/>
              </PointSet>
            </Shape>
            <Shape DEF='MinorPoints'>
              <Appearance>
                <LineProperties
                    linewidthScaleFactor='4'/>
                <Material USE='MinorMaterial'/>
              </Appearance>
              <PointSet DEF='MinorPoints_1'>
                <Coordinate
                    point='0 -4 0, 0 -3 0, 0 -2 0, 0 -1 0, 0 1 0, 0 2 0, 0 3 0, 0 4 0'/>
              </PointSet>
            </Shape>
            <Switch DEF='Numbers'
                whichChoice='1'>
              <Group/>
              <Transform>
                <IS>
                  <connect nodeField='translation' protoField='numberOffset'/>
                </IS>
                <Transform DEF='Zero'
                    rotation='-1 -0 0 1.5707963267949'>
                  <Shape>
                    <IS>
                      <connect nodeField='appearance' protoField='numberAppearance'/>
                    </IS>
                    <Text
                        string='"0"'>
                      <IS>
                        <connect nodeField='solid' protoField='solid'/>
                        <connect nodeField='fontStyle' protoField='numberFontStyle'/>
                      </IS>
                    </Text>
                  </Shape>
                </Transform>
                <Group DEF='XNumbers'>
                  <Transform
                      translation='-5 0 0'
                      rotation='-1 0 0 1.5707963267949'>
                    <Shape>
                      <Text
                          string='"-5"'/>
                    </Shape>
                  </Transform>
                  <Transform
                      translation='5 0 0'
                      rotation='-1 0 0 1.5707963267949'>
                    <Shape>
                      <Text
                          string='"5"'/>
                    </Shape>
                  </Transform>
                </Group>
                <Group DEF='YNumbers'>
                  <Transform
                      translation='0 0 -5'
                      rotation='-1 0 0 1.5707963267949'>
                    <Shape>
                      <Text
                          string='"-5"'/>
                    </Shape>
                  </Transform>
                  <Transform
                      translation='0 0 5'
                      rotation='-1 0 0 1.5707963267949'>
                    <Shape>
                      <Text
                          string='"5"'/>
                    </Shape>
                  </Transform>
                </Group>
              </Transform>
            </Switch>
          </Transform>
        </Transform>
        <Script DEF='GridScript'
            directOutput='true'
            mustEvaluate='true'>
          <field accessType='inputOutput' type='MFInt32' name='dimension'/>
          <field accessType='inputOutput' type='MFInt32' name='majorLineEvery'/>
          <field accessType='inputOutput' type='MFInt32' name='majorLineOffset'/>
          <field accessType='inputOutput' type='SFBool' name='numbers'/>
          <field accessType='initializeOnly' type='SFNode' name='plane'>
            <Transform USE='Plane'/>
          </field>
          <field accessType='initializeOnly' type='SFNode' name='majorGrid'>
            <IndexedLineSet USE='MajorGrid_1'/>
          </field>
          <field accessType='initializeOnly' type='SFNode' name='minorGrid'>
            <IndexedLineSet USE='MinorGrid_1'/>
          </field>
          <field accessType='initializeOnly' type='SFNode' name='majorPoints'>
            <PointSet USE='MajorPoints_1'/>
          </field>
          <field accessType='initializeOnly' type='SFNode' name='minorPoints'>
            <PointSet USE='MinorPoints_1'/>
          </field>
          <field accessType='initializeOnly' type='SFNode' name='numbersSwitch'>
            <Switch USE='Numbers'/>
          </field>
          <field accessType='initializeOnly' type='SFNode' name='xNumbers'>
            <Group USE='XNumbers'/>
          </field>
          <field accessType='initializeOnly' type='SFNode' name='yNumbers'>
            <Group USE='YNumbers'/>
          </field>
          <field accessType='inputOutput' type='SFNode' name='numberAppearance'/>
          <field accessType='inputOutput' type='SFNode' name='numberFontStyle'/>
          <field accessType='initializeOnly' type='SFBool' name='solid'/>
          <IS>
            <connect nodeField='dimension' protoField='dimension'/>
            <connect nodeField='majorLineEvery' protoField='majorLineEvery'/>
            <connect nodeField='majorLineOffset' protoField='majorLineOffset'/>
            <connect nodeField='numbers' protoField='numbers'/>
            <connect nodeField='numberAppearance' protoField='numberAppearance'/>
            <connect nodeField='numberFontStyle' protoField='numberFontStyle'/>
            <connect nodeField='solid' protoField='solid'/>
          </IS>
<![CDATA[ecmascript:

function initialize ()
{
	eventsProcessed ();
}

function eventsProcessed ()
{
	// Plane

	plane .scale = new SFVec3f (dimension [0], dimension [2], 1);

	// Grid

	generateGrid (true, majorGrid);
	generateGrid (false, minorGrid);

	// Points

	generatePoints (true,  majorPoints .coord .point);
	generatePoints (false, minorPoints .coord .point);
	
	// Numbers

	generateNumbers (0, xNumbers);
	generateNumbers (2, yNumbers);
}

function generateGrid (major, grid)
{
	var point       = grid .coord .point;
	var coordIndex  = new MFInt32 ();
	var scaleX1_2   = dimension [0] / 2;
	var scaleZ1_2   = dimension [2] / 2;
	var majorAdd    = major / 4;
	var p           = 0;

	for (var i = 0, size = dimension [0] + 1; i < size; ++ i)
	{
		if (major - isMajorLine (i, 0))
			continue;

		var x = -scaleX1_2 + i;

		point [p]     = new SFVec3f (x, 0, -scaleZ1_2 - majorAdd);
		point [p + 1] = new SFVec3f (x, 0,  scaleZ1_2 + majorAdd);
		coordIndex [coordIndex .length] = p;
		coordIndex [coordIndex .length] = p + 1;
		coordIndex [coordIndex .length] = -1;
			
		p += 2;
	}

	for (var i = 0, size = dimension [2] + 1; i < size; ++ i)
	{
		if (major - isMajorLine (i, 2))
			continue;

		var z = -scaleZ1_2 + i;

		point [p]     = new SFVec3f (-scaleX1_2 - majorAdd, 0, z);
		point [p + 1] = new SFVec3f ( scaleX1_2 + majorAdd, 0, z);
		coordIndex [coordIndex .length] = p;
		coordIndex [coordIndex .length] = p + 1;
		coordIndex [coordIndex .length] = -1;
		
		p += 2;
	}

	point .length = p;

	grid .set_coordIndex = coordIndex;
}

function generatePoints (major, point)
{
	var scaleY1_2 = -dimension [1] / 2;
	var p         = 0;

	for (var i = 0, size = dimension [1] + 1; i < size; ++ i)
	{
		if (major - isMajorLine (i, 1))
			continue;

		point [p] = new SFVec3f (0, scaleY1_2 + i, 0);
		++ p;
	}

	point .length = p;
}

function generateNumbers (axis, axisNumbers)
{
	var
		currentScene = Browser .currentScene,
		scale1_2     = dimension [axis] / 2,
		rotation     = new SFRotation (-1, 0, 0, Math .PI / 2);
	
	numbersSwitch .whichChoice    = numbers;
	axisNumbers .children .length = 0;

	if (! numbers)
		return

	for (var i = 0, size = dimension [axis] + 1; i < size; ++ i)
	{
		if (! isMajorLine (i, axis))
			continue;
			
		var p = -scale1_2 + i;
		
		if (p == 0)
			continue;
	
		var
			transform = currentScene .createNode ("Transform"),
			shape     = currentScene .createNode ("Shape"),
			text      = currentScene .createNode ("Text");
		
		axisNumbers .children .push (transform);
		transform   .children .push (shape);
		shape       .appearance = numberAppearance;

		transform .translation [axis] = p;
		transform .rotation           = rotation;
		shape .geometry               = text;
		text  .solid                  = solid;
		text  .string [0]             = -scale1_2 + i;
		text  .fontStyle              = numberFontStyle;
	}
}

function isMajorLine (i, index)
{
	for (var d = index; d < majorLineEvery .length; d += 3)
	{
		if (isMajor (i, dimension [index], majorLineEvery [d], majorLineOffset [d]))
			return true;
	}

	return false;
}

function isMajor (i, dimension, majorLineEvery, majorLineOffset)
{
	if (majorLineEvery)
	{
		var index = Math .floor (i - dimension / 2 - majorLineOffset);

		return !(index % majorLineEvery);
	}

	return false;
}
]]>
        </Script>
      </ProtoBody>
    </ProtoDeclare>
    <ProtoInstance name='Grid'>
      <fieldValue name='numbers' value='false'/>
    </ProtoInstance>
  </Scene>
</X3D>
